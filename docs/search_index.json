[["sample_canopycov_hli.html", "Section 5 Sample by Canopy Cover and HLI 5.1 Read Data 5.2 Aspect and HLI 5.3 Tree Canopy Cover 5.4 Aggregate and Crop to Rx fire Units 5.5 Classify Raster Grid 5.6 Sample Order and Export", " Section 5 Sample by Canopy Cover and HLI # turn off the s2 processing ## https://stackoverflow.com/questions/68478179/how-to-resolve-spherical-geometry-failures-when-joining-spatial-data sf::sf_use_s2(FALSE) 5.1 Read Data Vector data and forest cover data created in prior chapters. # read bhef_boundary &lt;- sf::st_read(&quot;../data/bhef_boundary.gpkg&quot;) # bhef_harvests &lt;- sf::st_read(&quot;../data/bhef_harvests.gpkg&quot;) # bhef_tsi &lt;- sf::st_read(&quot;../data/bhef_tsi.gpkg&quot;) rx_fire &lt;- sf::st_read(&quot;../data/rx_fire.gpkg&quot;) # # forest cov crowns_group &lt;- sf::st_read(&quot;../data/crowns_group.gpkg&quot;) crowns_rast &lt;- terra::rast(&quot;../data/crowns_st.tif&quot;) # chm &lt;- terra::rast(&quot;../data/chm.tif&quot;) %&gt;% # terra::aggregate(fact = 5, fun = &quot;mean&quot;, na.rm = T) # elevation bhef_elev &lt;- terra::rast(&quot;../data/bhef_elev.tif&quot;) # terra::aggregate(fact = 5, fun = &quot;mean&quot;, na.rm = T) 5.2 Aspect and HLI Aspect of a slope (the direction or azimuth that a slope faces) strongly influences potential direct incident radiation and temperature. Untransformed, aspect is a poor variable for quantitative analysis, since 1° is adjacent to 360° – the numbers are very different even though the aspect is about the same. The following equation for Heat Load Index (HLI) rescales aspect to a scale of zero to one, with zero being the coolest slope (northeast) and one being the warmest slope (southwest). HLI is a proxy for aspect-driven solar heating. \\[ \\textrm{Heat load index} = \\frac{1 - \\cos(\\theta - 45)}{2} \\] where \\(\\theta\\) = aspect in degrees east of north. While this and related equations are useful, they do not consider the steepness of the slope. For example, a 1° south-facing slope would receive the same heat load index as a 30° south-facing slope, even though the latter will be considerably warmer. HLI calculations have been developed which combine slope, folded aspect (i.e., “southwestness”), and latitude to estimate terrain-driven solar heating at a given location (McCune &amp; Keon 2002: eq. 2). To calculate HLI, we used equation 2 of McCune &amp; Keon 2002: eq. 2. Higher values of HLI are typical on steep southwesterly slopes, while low values are common on steep northeasterly slopes. Moderate values are common in flatter terrain and on northwesterly and southeasterly aspects. Aspect must first be “folded” about the north-south line, rescaling 0-360° to 0-180°, such that NE = NW, E = W, etc: \\[ \\textrm{Folded aspect°} = 180° \\, - \\, | Aspect° – 180° | \\] # convert elevation raster from terra to stars my_crs &lt;- 5070 # EPSG:5070 = NAD83/Conus Albers (units = meters) elev_stars_temp &lt;- stars::st_as_stars(bhef_elev |&gt; terra::project( paste0(&quot;EPSG:&quot;,my_crs) )) %&gt;% setNames(c(&quot;elev&quot;)) # extract latitude degrees from stars object lats_temp &lt;- sf::st_coordinates(elev_stars_temp) %&gt;% sf::st_as_sf(coords = c(&quot;x&quot;, &quot;y&quot;), crs = my_crs) %&gt;% sf::st_transform(crs = 4326) %&gt;% sf::st_coordinates() %&gt;% dplyr::as_tibble() %&gt;% setNames(c(&quot;longitude&quot;,&quot;latitude&quot;)) %&gt;% dplyr::select(latitude) gc() # hli function # This equation returns ln(Rad, MJ · cm–2 · yr–1). It can # be returned to an arithmetic scale with the EXP(x) # function. hli_fn &lt;- function(slope_rad, folded_aspect_rad, latitude_rad){ exp( (-1*1.236) + 1.350*cos(latitude_rad)*cos(slope_rad) + (-1*1.376)*cos(folded_aspect_rad)*sin(slope_rad)*sin(latitude_rad) + (-1*0.331)*sin(latitude_rad)*sin(slope_rad) + 0.375*sin(folded_aspect_rad)*sin(slope_rad) ) } # calculate slope and aspect from DEM topo_temp &lt;- c( elev_stars_temp , starsExtra::slope(elev_stars_temp) , starsExtra::aspect(elev_stars_temp) ) %&gt;% setNames( c(&quot;elev&quot;, &quot;slope_deg&quot;, &quot;aspect_deg&quot;) ) %&gt;% dplyr::mutate( slope_rad = pracma::deg2rad(as.numeric(slope_deg)) , aspect_rad = pracma::deg2rad(as.numeric(aspect_deg)) , folded_aspect_deg = 180 - abs(as.numeric(aspect_deg)-180) , folded_aspect_rad = pracma::deg2rad(folded_aspect_deg) , latitude_deg = lats_temp$latitude , latitude_rad = pracma::deg2rad(as.numeric(latitude_deg)) , hli = dplyr::case_when( hli_fn(slope_rad, folded_aspect_rad, latitude_rad) &gt; 1 ~ 1 , hli_fn(slope_rad, folded_aspect_rad, latitude_rad) &lt; 0 ~ 0 , TRUE ~ hli_fn(slope_rad, folded_aspect_rad, latitude_rad) ) ) # convert just HLI back to terra hli &lt;- terra::rast((topo_temp %&gt;% dplyr::select(hli))[]) %&gt;% terra::project( terra::crs(crowns_rast) ) %&gt;% # resample to align layers terra::resample(y=crowns_rast, method = &quot;bilinear&quot;) %&gt;% terra::crop(crowns_rast) # rename names(hli) &lt;- &quot;hli&quot; plot(hli, main = &quot;HLI&quot;) # does it have the same extent? terra::ext(hli) == terra::ext(crowns_rast) if(FALSE){ # smooth HLI with median value in matrix # d = 1 = 3x3 # d = 2 = 5x5 # d = 3 = 7x7 # fw_temp &lt;- terra::focalMat(hli, d = 2, type = &quot;rectangle&quot;) fw_temp &lt;- matrix(1,5,5) hli &lt;- terra::focal(hli, w = fw_temp, fun = &quot;median&quot;, na.rm=T) plot(hli, main = &quot;HLI smooth&quot;) # does it have the same extent? terra::ext(hli) == terra::ext(crowns_rast) } # aggregate to 25m resolution hli %&gt;% terra::aggregate(fact = 25, fun = &quot;median&quot;) %&gt;% plot(main = &quot;HLI aggregate&quot;) 5.3 Tree Canopy Cover The tree crown raster data represents tree crowns (interconnected crown groups or individual crowns) with minimum tree height of 2 meters created here using lidR::dalponte2016. Values of this raster are tree crown id’s. # values crowns_rast %&gt;% terra::values() %&gt;% summary() # plot crowns_rast %&gt;% terra::mask( rx_fire %&gt;% sf::st_union() %&gt;% sf::st_buffer(100) %&gt;% terra::vect() ) %&gt;% as.data.frame(xy=T) %&gt;% dplyr::rename(f=3) %&gt;% ggplot() + geom_tile(mapping=aes(x=x,y=y,fill=f), fill = &quot;forestgreen&quot;, alpha = 0.8, color = NA) + geom_sf(data = bhef_boundary, alpha = 0, lwd = 1, color = &quot;black&quot;, linetype = &quot;dashed&quot;) + geom_sf(data = rx_fire, alpha = 0, lwd = 1, color = &quot;orangered&quot;) + geom_sf_label(data = rx_fire, aes(label = unit) , label.size = NA , alpha = 0 , size = 3 ) + coord_sf(expand = F) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + labs( title = &quot;Lidar-Derived Canopy Cover (&gt;2m in 2017)&quot; , subtitle = paste0(&quot;Rx fire units&quot;) , x=&quot;&quot; , y=&quot;&quot; # , fill = nm_temp[layer_n] ) + theme_light() + theme( legend.position = &quot;none&quot; , legend.direction = &quot;horizontal&quot; , legend.margin = margin(0,0,0,0) , legend.box.margin = margin(-21,0,2,0) , legend.text = element_text(size = 7, angle = 25, hjust = 0.7) , legend.title = element_text(size = 7) , axis.text = element_text(size = 7) , axis.text.x = element_text(size = 7, angle = 35, hjust = 0.7) , plot.title = element_text(size = 10, face = &quot;bold&quot;, margin = margin(0,0,2,0)) , plot.subtitle = element_text(size=8, face=&quot;italic&quot;, color=&quot;orangered&quot;, margin = margin(0,0,0,0)) , panel.border = element_blank() ) # reclass crowns as 1, else 0 # reclass matrix rcl_temp &lt;- c( crowns_rast %&gt;% terra::values() %&gt;% min(na.rm = T) , crowns_rast %&gt;% terra::values() %&gt;% max(na.rm = T) , 1 ) %&gt;% matrix(ncol=3, byrow=TRUE) # binary raster iscrown_rast &lt;- crowns_rast %&gt;% terra::classify( rcl = rcl_temp , include.lowest = T , others = 0 ) %&gt;% # update to 0/1 because na values are not 0 terra::subst(from=NA,to=0) # values iscrown_rast %&gt;% terra::values() %&gt;% summary() iscrown_rast %&gt;% terra::res() # plot iscrown_rast %&gt;% as.data.frame(xy=T) %&gt;% dplyr::rename(f=3) %&gt;% ggplot() + geom_raster(mapping=aes(x=x,y=y,fill=as.factor(f))) + geom_sf(data = bhef_boundary, fill = NA, color = &quot;black&quot;, lwd = 1.1) + scale_fill_viridis_d(na.value = &quot;transparent&quot;) # plot zoom iscrown_rast %&gt;% terra::crop( bhef_boundary %&gt;% sf::st_centroid() %&gt;% sf::st_buffer(10) ) %&gt;% as.data.frame(xy=T) %&gt;% dplyr::rename(f=3) %&gt;% ggplot() + geom_raster(mapping=aes(x=x,y=y,fill=as.factor(f))) + scale_fill_viridis_d(na.value = &quot;transparent&quot;) 5.4 Aggregate and Crop to Rx fire Units # select aggregate resolution: 25 = 25x25m grid agg_res &lt;- 25 # aggreaged and combine layers layers &lt;- c( iscrown_rast %&gt;% terra::aggregate(fact = agg_res, fun = &quot;mean&quot;) , hli %&gt;% terra::aggregate(fact = agg_res, fun = &quot;median&quot;) ) %&gt;% setNames(c(&quot;crowncov&quot;, &quot;hli&quot;)) # crop to rx fire units bounds layers &lt;- layers %&gt;% terra::mask( rx_fire %&gt;% sf::st_union() %&gt;% terra::vect() ) # plot nm_temp &lt;- c(&quot;% Canopy Cov.&quot;, &quot;HLI&quot;) plt_fn_temp &lt;- function(layer_n) { plt &lt;- layers[[layer_n]] %&gt;% as.data.frame(xy=T) %&gt;% dplyr::rename(f=3) %&gt;% ggplot() + geom_raster(mapping=aes(x=x,y=y,fill=f)) + geom_sf(data = bhef_boundary, alpha = 0, lwd = 1, color = &quot;black&quot;, linetype = &quot;dashed&quot;) + geom_sf(data = rx_fire, alpha = 0, lwd = 1, color = &quot;orangered&quot;) + geom_sf_label(data = rx_fire, aes(label = unit) , label.size = NA , alpha = 0 , size = 3 ) + coord_sf(expand = F) + scale_fill_viridis_c(option = (8-layer_n), alpha = 0.8) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + labs( title = nm_temp[layer_n] , subtitle = paste0(&quot;Rx fire units&quot;) , x=&quot;&quot; , y=&quot;&quot; , fill = nm_temp[layer_n] ) + theme_light() + theme( legend.position = &quot;bottom&quot; , legend.direction = &quot;horizontal&quot; , legend.margin = margin(0,0,0,0) , legend.box.margin = margin(-21,0,2,0) , legend.text = element_text(size = 7, angle = 25, hjust = 0.7) , legend.title = element_text(size = 7) , axis.text = element_text(size = 7) , axis.text.x = element_text(size = 7, angle = 35, hjust = 0.7) , plot.title = element_text(size = 10, face = &quot;bold&quot;, margin = margin(0,0,2,0)) , plot.subtitle = element_text(size=8, face=&quot;italic&quot;, color=&quot;orangered&quot;, margin = margin(0,0,0,0)) , panel.border = element_blank() ) return(plt) } plt_list_temp &lt;- 1:(layers %&gt;% terra::nlyr()) %&gt;% purrr::map(plt_fn_temp) # combine cowplot::plot_grid( plotlist = plt_list_temp , nrow = 1 ) Canopy cover (%) and HLI (median) were aggregated to a sample grid at 25m resolution from an original data resolution of 1m. 5.5 Classify Raster Grid 5.5.1 Cutpoints cutlist &lt;- seq(0,1,0.2) # cutlist_df_temp &lt;- data.frame( hli = stats::quantile( layers$hli %&gt;% terra::values() , probs = cutlist , na.rm = T ) , crowncov = stats::quantile( layers$crowncov %&gt;% terra::values() , probs = cutlist , na.rm = T ) ) %&gt;% tibble::rownames_to_column(var=&quot;pct&quot;) %&gt;% tidyr::pivot_longer( cols = c(hli,crowncov) ) %&gt;% dplyr::group_by(name) %&gt;% dplyr::mutate( pct_n = readr::parse_number(pct) ) %&gt;% dplyr::arrange(name,pct_n) %&gt;% dplyr::mutate( n = dplyr::row_number()-1 , value_1 = dplyr::lag(value) ) %&gt;% dplyr::filter(n&gt;0) %&gt;% dplyr::mutate( f = factor( n , levels = 1:5 , labels = c(&quot;low&quot;,&quot;med.low&quot;,&quot;medium&quot;,&quot;med.high&quot;,&quot;high&quot;) , ordered = T ) , lab = dplyr::case_when( name == &quot;hli&quot; ~ scales::comma(value, accuracy = 0.01) , name == &quot;crowncov&quot; ~ scales::percent(value, accuracy = 1) ) , lab_1 = dplyr::case_when( name == &quot;hli&quot; ~ scales::comma(value_1, accuracy = 0.01) , name == &quot;crowncov&quot; ~ scales::percent(value_1, accuracy = 1) ) , name = dplyr::case_when( name == &quot;hli&quot; ~ &quot;HLI&quot; , name == &quot;crowncov&quot; ~ &quot;Canopy Cover&quot; ) ) %&gt;% ggplot(mapping = aes(y=f,x = (value_1+value)/2)) + geom_errorbar(mapping = aes(xmin=value_1,xmax=value,color=f)) + geom_point(mapping = aes(color = f)) + geom_text(mapping = aes(label = paste0(lab_1,&quot;\\nto &quot;,lab)) , size = 3 , hjust = 0 , vjust = -0.5 ) + facet_grid(cols = vars(name), scales = &quot;free_x&quot;) + scale_color_viridis_d(option=&quot;turbo&quot;) + scale_y_discrete(limits=rev) + labs( x = &quot;&quot; , y = &quot;Grouping&quot; ) + theme_light() + theme( legend.position = &quot;none&quot; , axis.text.x = element_blank() , axis.title.x = element_blank() , axis.line.x = element_blank() , strip.text = element_text(color=&quot;black&quot;, face=&quot;bold&quot;, size=11) ) 5.5.2 Canopy Cover and HLI Group Map rast_grp_class_fn &lt;- function(layer_n, pct_cut_list = seq(0,1,0.2)) { # classify based on percentile cuts_temp &lt;- stats::quantile( layers[[layer_n]] %&gt;% terra::values() , probs = pct_cut_list , na.rm = T ) # create classification raster based on percentiles rast_temp &lt;- layers[[layer_n]] %&gt;% classify( rcl = cuts_temp , include.lowest=TRUE , brackets=TRUE ) # recode to get rid of bracket labels and set index to 1 instead of 0 based rcl_temp &lt;- rast_temp %&gt;% terra::levels() %&gt;% purrr::pluck(1) %&gt;% dplyr::as_tibble() %&gt;% dplyr::mutate( old = value , new = value+1 ) %&gt;% dplyr::select(old,new) # classify rast_temp &lt;- rast_temp %&gt;% terra::classify(rcl=rcl_temp) %&gt;% terra::categories( value = rcl_temp %&gt;% dplyr::mutate(category = new) %&gt;% dplyr::select(new,category) %&gt;% dplyr::rename(id=new) ) # return return(rast_temp) } # create grouped raster stack layers_grp &lt;- 1:(layers %&gt;% terra::nlyr()) %&gt;% purrr::map(rast_grp_class_fn) %&gt;% terra::rast() %&gt;% setNames( names(layers) ) # plot nm_temp &lt;- c(&quot;% Canopy Cov.&quot;, &quot;HLI&quot;) plt_fn_temp &lt;- function(layer_n) { plt &lt;- layers_grp[[layer_n]] %&gt;% as.data.frame(xy=T) %&gt;% dplyr::rename(f=3) %&gt;% dplyr::mutate( f = factor( f , levels = 1:5 , labels = c(&quot;low&quot;,&quot;med.low&quot;,&quot;medium&quot;,&quot;med.high&quot;,&quot;high&quot;) , ordered = T ) ) %&gt;% ggplot() + geom_raster(mapping=aes(x=x,y=y,fill=f)) + geom_sf(data = bhef_boundary, alpha = 0, lwd = 1, color = &quot;black&quot;, linetype = &quot;dashed&quot;) + geom_sf(data = rx_fire, alpha = 0, lwd = 1, color = &quot;orangered&quot;) + geom_sf_label(data = rx_fire, aes(label = unit) , label.size = NA , alpha = 0 , size = 3 ) + coord_sf(expand = F) + scale_fill_viridis_d(option = &quot;turbo&quot;, alpha = 0.8) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + labs( title = nm_temp[layer_n] , subtitle = paste0(&quot;Rx fire units&quot;) , x=&quot;&quot; , y=&quot;&quot; , fill = nm_temp[layer_n] ) + theme_light() + theme( legend.position = &quot;bottom&quot; , legend.direction = &quot;horizontal&quot; , legend.margin = margin(0,0,0,0) , legend.box.margin = margin(-21,0,2,0) , legend.text = element_text(size = 7) , legend.title = element_text(size = 7) , axis.text = element_text(size = 7) , axis.text.x = element_text(size = 7, angle = 35, hjust = 0.7) , plot.title = element_text(size = 10, face = &quot;bold&quot;, margin = margin(0,0,2,0)) , plot.subtitle = element_text(size=8, face=&quot;italic&quot;, color=&quot;orangered&quot;, margin = margin(0,0,0,0)) , panel.border = element_blank() ) return(plt) } # plot plt_list_temp &lt;- 1:(layers_grp %&gt;% terra::nlyr()) %&gt;% purrr::map(plt_fn_temp) # combine cowplot::plot_grid( plotlist = plt_list_temp , nrow = 1 ) 5.5.3 Map of grouped Canopy Cover and HLI l1_temp &lt;- layers_grp[[1]] %&gt;% stars::st_as_stars() l2_temp &lt;- layers_grp[[2]] %&gt;% stars::st_as_stars() mapview::mapviewOptions( homebutton = FALSE , basemaps = c(&quot;Esri.WorldImagery&quot;,&quot;OpenTopoMap&quot;) , na.color = &quot;transparent&quot; ) mapview::mapview( l1_temp , col.regions = viridis::turbo(n=5) , legend = TRUE , layer.name = names(layers_grp[[1]]) ) + mapview::mapview( l2_temp , col.regions = viridis::turbo(n=5) , legend = T , layer.name = names(layers_grp[[2]]) , hide = T ) 5.5.4 Combine Grouped Canopy Cover and HLI # combine layers for classification concat_rast &lt;- terra::concats(layers_grp[[1]], layers_grp[[2]]) %&gt;% setNames( (layers %&gt;% names() %&gt;% paste(collapse = &quot;_&quot;)) ) # data_frame concat_sf &lt;- c( concat_rast , layers ) %&gt;% terra::as.points() %&gt;% sf::st_as_sf(crs = sf::st_crs(bhef_boundary)) %&gt;% dplyr::mutate( x = sf::st_coordinates(geometry)[,1] #lon , y = sf::st_coordinates(geometry)[,2] #lat , crowncov_grp = stringr::str_split_i(crowncov_hli, &quot;_&quot;, 1) , hli_grp = stringr::str_split_i(crowncov_hli, &quot;_&quot;, 2) , crowncov_hli_filter = forcats::fct_other( f = crowncov_hli , keep = c( &quot;1_1&quot;,&quot;1_3&quot;,&quot;1_5&quot; , &quot;3_1&quot;,&quot;3_3&quot;,&quot;3_5&quot; , &quot;5_1&quot;,&quot;5_3&quot;,&quot;5_5&quot; ) , other_level = &quot;other&quot; ) , dplyr::across( c(crowncov_grp,hli_grp) , ~ factor( .x , levels = 1:5 , labels = c(&quot;low&quot;,&quot;med.low&quot;,&quot;medium&quot;,&quot;med.high&quot;,&quot;high&quot;) , ordered = T ) ) ) %&gt;% sf::st_intersection( rx_fire %&gt;% dplyr::select(unit) %&gt;% dplyr::rename(rx_fire_unit = unit) ) # plot concat_sf %&gt;% dplyr::filter(crowncov_hli_filter!=&quot;other&quot;) %&gt;% ggplot() + geom_tile(aes(x=x,y=y,fill=crowncov_hli_filter)) + # geom_sf(size = 0.2) + geom_sf(data = bhef_boundary, alpha = 0, lwd = 1, color = &quot;black&quot;, linetype = &quot;dashed&quot;) + geom_sf(data = rx_fire, alpha = 0, lwd = 1, color = &quot;orangered&quot;) + geom_sf_label(data = rx_fire, aes(label = unit) , label.size = NA , alpha = 0 , size = 3 ) + coord_sf(expand = F) + scale_fill_viridis_d(option = &quot;turbo&quot;, alpha = 0.8) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + labs( title = &quot;Canopy Cover (1=low,3=med,5=hi)\\nx HLI (1=low,3=med,5=hi)&quot; , subtitle = paste0(&quot;Rx fire units&quot;) , x=&quot;&quot; , y=&quot;&quot; , fill = &quot;Canopy_HLI&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.margin = margin(0,0,0,0) # , legend.box.margin = margin(-21,0,2,0) , legend.text = element_text(size = 7) , legend.title = element_text(size = 7) , axis.text = element_text(size = 7) , axis.text.x = element_text(size = 7, angle = 35, hjust = 0.7) , plot.title = element_text(size = 10, face = &quot;bold&quot;, margin = margin(0,0,2,0)) , plot.subtitle = element_text(size=8, face=&quot;italic&quot;, color=&quot;orangered&quot;, margin = margin(0,0,0,0)) , panel.border = element_blank() ) + guides(fill=guide_legend(nrow=3,byrow=TRUE)) 5.5.5 Example Rx Fire Unit unit_temp &lt;- &quot;22&quot; # plot concat_sf %&gt;% dplyr::filter(crowncov_hli_filter!=&quot;other&quot; &amp; rx_fire_unit==unit_temp) %&gt;% ggplot() + geom_tile(aes(x=x,y=y,fill=crowncov_hli_filter)) + geom_sf(size = 0.2, color = &quot;gray22&quot;) + geom_sf(data = rx_fire %&gt;% dplyr::filter(unit==unit_temp) , alpha = 0, lwd = 1, color = &quot;orangered&quot; ) + coord_sf(expand = F) + scale_fill_viridis_d(option = &quot;turbo&quot;, alpha = 0.8) + scale_x_continuous(expand = c(0, 0)) + scale_y_continuous(expand = c(0, 0)) + labs( title = &quot;Canopy Cover (1=low,3=med,5=hi)\\nx HLI (1=low,3=med,5=hi)&quot; , subtitle = paste0(&quot;Rx fire unit &quot;, unit_temp) , x=&quot;&quot; , y=&quot;&quot; , fill = &quot;Canopy_HLI&quot; ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.direction = &quot;horizontal&quot; , legend.margin = margin(0,0,0,0) # , legend.box.margin = margin(-21,0,2,0) , legend.text = element_text(size = 7) , legend.title = element_text(size = 7) , axis.text = element_text(size = 7) , axis.text.x = element_text(size = 7, angle = 35, hjust = 0.7) , plot.title = element_text(size = 10, face = &quot;bold&quot;, margin = margin(0,0,2,0)) , plot.subtitle = element_text(size=8, face=&quot;italic&quot;, color=&quot;orangered&quot;, margin = margin(0,0,0,0)) , panel.border = element_blank() ) + guides(fill=guide_legend(nrow=3,byrow=TRUE)) 5.5.6 Distribution of Canopy Cover and HLI by Rx Fire Unit dist_temp &lt;- concat_sf %&gt;% sf::st_drop_geometry() %&gt;% dplyr::count(rx_fire_unit, crowncov_hli_filter) %&gt;% dplyr::group_by(rx_fire_unit) %&gt;% dplyr::mutate( pct = n/sum(n) , tot = sum(n) , crowncov_hli_filter = crowncov_hli_filter %&gt;% forcats::fct_rev() ) %&gt;% dplyr::ungroup() # plot ggplot(data=dist_temp) + geom_col( mapping = aes(x = pct, y = rx_fire_unit, fill=crowncov_hli_filter) ,width = 0.7, alpha=0.8 ) + geom_text( mapping = aes(x = pct, y = rx_fire_unit, group=crowncov_hli_filter ,label = scales::percent(ifelse(pct&gt;=0.05,pct,NA), accuracy = 1) , fontface = &quot;bold&quot; ) , position = position_stack(vjust = 0.5) , color = &quot;black&quot;, size = 2.8 ) + geom_text( data = dist_temp %&gt;% dplyr::group_by(rx_fire_unit) %&gt;% dplyr::filter(dplyr::row_number()==1) , mapping = aes(x = -0.02, y = rx_fire_unit ,label = paste0(&quot;n=&quot; ,scales::comma(tot, accuracy = 1) ) ) , size = 3 , color = &quot;black&quot; , hjust = 0.7 ) + # scale_fill_brewer(type = &quot;div&quot;, palette = &quot;RdYlBu&quot;, direction = -1) + scale_fill_manual(values = rev(c( viridis::turbo( n= ((dist_temp %&gt;% dplyr::count(crowncov_hli_filter) %&gt;% nrow())-1) ) , &quot;gray&quot; ))) + scale_x_continuous(labels = scales::percent_format()) + labs( title = &quot;Canopy Cover (1=low,3=med,5=hi)\\nx HLI (1=low,3=med,5=hi)&quot; , fill = &quot;Canopy_HLI&quot; , y = &quot;Rx Fire Unit&quot; , x = latex2exp::TeX(paste0(&quot;% of Sample Plots (&quot;, agg_res,&quot;$\\\\textrm{m}^2$&quot;,&quot;)&quot;)) # , caption = nlab_temp ) + theme_light() + theme( legend.position = &quot;top&quot; , legend.title = element_text(size=7) , legend.direction = &quot;horizontal&quot; , legend.margin = margin(0,0,0,0) , axis.title = element_text(size=9) , axis.text.x = element_text(size=7) , strip.text = element_text(color = &quot;black&quot;, face = &quot;bold&quot;) , plot.title = element_text(size = 9) ) + guides( fill = guide_legend(reverse = T, override.aes = list(alpha = 0.9), nrow = 4, byrow = T) ) 5.5.7 Matrix of Canopy Cover and HLI by Rx Fire Unit concat_sf %&gt;% sf::st_drop_geometry() %&gt;% dplyr::filter(crowncov_hli_filter!=&quot;other&quot;) %&gt;% dplyr::count(rx_fire_unit, crowncov_grp, hli_grp, crowncov_hli_filter) %&gt;% dplyr::group_by(rx_fire_unit) %&gt;% dplyr::mutate( pct = n/sum(n) , tot = sum(n) ) %&gt;% dplyr::ungroup() %&gt;% # dplyr::filter(rx_fire_unit %in% c(&quot;1&quot;,&quot;11&quot;,&quot;22&quot;)) %&gt;% dplyr::mutate(rx_fire_unit = paste0(&quot;unit &quot;,rx_fire_unit)) %&gt;% ggplot( mapping = aes(y = crowncov_grp, x = hli_grp) ) + geom_tile(aes(fill = crowncov_hli_filter), color = &quot;white&quot;,alpha=0.8) + geom_text(aes(label = scales::comma(n,accuracy=1), fontface=&quot;bold&quot;), vjust = 0.5,size = 3.5) + geom_text(aes(label = scales::percent(pct,accuracy=0.1)), vjust = 0.5, hjust=-0.55,size = 2.5) + facet_grid( rows = vars(rx_fire_unit) # , switch = &quot;y&quot; ) + scale_fill_viridis_d(option = &quot;turbo&quot;) + scale_x_discrete(position = &quot;top&quot;) + scale_y_discrete(limits = rev) + labs( y = &quot;Canopy Cover&quot; , x = &quot;HLI&quot; , title = latex2exp::TeX(paste0(&quot;Matrix of Sample Plots (&quot;, agg_res,&quot;$\\\\textrm{m}^2$&quot;,&quot;)&quot;)) ) + theme_light() + theme( legend.position = &quot;none&quot; , panel.grid = element_blank() , plot.title = element_text(size = 9) , strip.text.y = element_text(angle = 0) , axis.title = element_text(face = &quot;bold&quot;, size = 12) # , strip.placement = &quot;outside&quot; ) The figure above excludes plots with a classification other than the Canopy Cover and HLI classes shown (e.g. HLI = med. low, Canopy Cover = med. high). 5.6 Sample Order and Export set.seed(11) concat_sf &lt;- concat_sf %&gt;% dplyr::ungroup() %&gt;% dplyr::relocate(rx_fire_unit) %&gt;% dplyr::mutate(rand=runif(dplyr::row_number())) %&gt;% dplyr::arrange(rx_fire_unit, crowncov_hli_filter, desc(rand)) %&gt;% dplyr::group_by(rx_fire_unit, crowncov_hli_filter) %&gt;% dplyr::mutate(sample_number = dplyr::row_number()) %&gt;% dplyr::select(-c(rand)) %&gt;% dplyr::ungroup() # export sf::st_write( concat_sf %&gt;% dplyr::filter( crowncov_hli_filter!=&quot;other&quot; &amp; sample_number &lt;= 30 ) ,&quot;../data/bhef_rxfire_hli_canopycov_samplepoints.gpkg&quot; , append = F ) write.csv( concat_sf %&gt;% sf::st_drop_geometry() %&gt;% dplyr::filter( crowncov_hli_filter!=&quot;other&quot; &amp; sample_number &lt;= 30 ) ,&quot;../data/bhef_rxfire_hli_canopycov_samplepoints.csv&quot; , append = F ) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
